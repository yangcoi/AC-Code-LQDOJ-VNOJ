//#################################################################
//#                             _`				#
//#                          _ooOoo_				#
//#                         o8888888o				#
//#                         88" . "88				#
//#                         (| -_- |)				#
//#                         O\  =  /O				#
//#                      ____/`---'\____				#
//#                    .'  \\|     |//  `.			#
//#                   /  \\|||  :  |||//  \			#
//#                  /  _||||| -:- |||||_  \			#
//#                  |   | \\\  -  /'| |   |			#
//#                  | \_|  `\`---'//  |_/ |			#
//#                  \  .-\__ `-. -'__/-.  /			#
//#                ___`. .'  /--.--\  `. .'___			#
//#             ."" '<  `.___\_<|>_/___.' _> \"".			#
//#            | | :  `- \`. ;`. _/; .'/ /  .' ; |		#
//#            \  \ `-.   \_\_`. _.'_/_/  -' _.' /		#
//#=============`-.`___`-.__\ \___  /__.-'_.'_.-'=================#
//                           `=--=-'
//
//
//
//          _.-/`)
//         // / / )
//      .=// / / / )
//     //`/ / / / /
//    // /     ` /
//   ||         /
//    \\       /
//     ))    .'
//    //    /
////
//https://lqdoj.edu.vn/problem/sumabs
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int *arr = new int[500005];
    auto f = new long long[500005][1];
    int n;

    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> arr[i];

    f[2][0] = max(abs(arr[2] - arr[1]), abs(arr[2] - 1));
    f[2][1] = abs(1 - arr[1]);

    for (int i = 3; i <= n; i++)
    {
        f[i][0] = max(f[i - 1][0] + abs(arr[i - 1] - arr[i]), f[i - 1][1] + abs(1 - arr[i]));
        f[i][1] = f[i - 1][0] + abs(arr[i - 1] - 1);
    }

    cout << max(f[n][0], f[n][1]);
}

